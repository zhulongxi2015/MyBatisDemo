<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="User">
        <id property="id" column="id" javaType="int"></id>
        <result property="login" column="login" javaType="String"></result>
        <result property="name" column="name" javaType="String"></result>
        <result property="pass" column="pass" javaType="String"></result>
        <result property="sex" column="sex" javaType="String"></result>
        <result property="phone" column="phone" javaType="String"></result>
        <result property="email" column="email" javaType="String"></result>
    </resultMap>
    <sql id="">

    </sql>
    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
     <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
     方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
     <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
     <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->
    <insert id="insertUser"  useGeneratedKeys="true"  keyProperty="id">
        insert into user (login,name,pass,sex,phone,email) values(#{login},#{name},#{pass},#{sex},#{phone},#{email})
    </insert>
    <update id="updateUser">

        update user set login=#{login}, name=#{name},pass=#{pass},sex=#{sex},phone=#{phone},email=#{email}
    </update>
    <delete id="deleteUser">
        delete from user where id=#{id}
    </delete>
    
    <select id="selectUserById" parameterType="int" resultMap="userMap" useCache="false" flushCache="true">
      select * from user where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
      select * from user
    </select>
</mapper>